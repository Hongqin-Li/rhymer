var searchIndex = JSON.parse('{\
"rhymer":{"doc":"Backend-as-a-Service in Rust","i":[[3,"Document","rhymer","A BSON document represented as an associative HashMap with…",null,null],[3,"Rejection","","Rejection of a request by a `Filter`.",null,null],[3,"Acl","","Access control of each object.",null,null],[12,"user","","Per-user access control, key is user_id",0,null],[12,"other","","Access control on other users",0,null],[3,"File","","File instance.",null,null],[12,"name","","File name that provided by user.",1,null],[12,"data","","File content in bytes.",1,null],[12,"file_size","","File size in bytes.",1,null],[12,"file_name","","File name that generated by prefixing unique ID before…",1,null],[12,"url","","The url used to retrieve this file.",1,null],[3,"Config","","Server configuration",null,null],[12,"port","","port",2,null],[12,"secret","","The secret will be used to create JWT and should not be…",2,null],[12,"database_url","","MongoDB url of form…",2,null],[12,"server_url","","Url of this server.",2,null],[12,"body_limit","","Maximum legal body size in bytes.",2,null],[3,"Context","","Per-server data passed on to Rhymer.",null,null],[12,"config","","Server config.",3,null],[12,"db","","Database connection instance.",3,null],[12,"before_save","","Before save hook functions.",3,null],[12,"after_save","","After save hook functions.",3,null],[12,"before_destroy","","Before destroy hook functions.",3,null],[12,"after_destroy","","After destory hook functions.",3,null],[12,"before_save_file","","Function to trigger before saving a file.",3,null],[12,"after_save_file","","Function to trigger after saving a file.",3,null],[12,"before_delete_file","","Function to trigger before deleting a file.",3,null],[12,"after_delete_file","","Function to trigger after deleting a file.",3,null],[12,"function","","Functions.",3,null],[3,"Request","","Per-request data passed to Rhymer.",null,null],[12,"headers","","Headers of user request.",4,null],[12,"body","","Body of user request.",4,null],[12,"user","","Extracted from headers",4,null],[3,"Server","","The server",null,null],[11,"new","","Create a new access control flag, default to read-write by…",0,[[]]],[11,"readable_by_user","","Check if readable by user with user_id",0,[[]]],[11,"writable_by_user","","Check if writable by user with user_id",0,[[]]],[11,"readable_by_public","","Check if readable by public (users not specified in ACL)",0,[[]]],[11,"writable_by_public","","Check if writable by public (users not specified in ACL)",0,[[]]],[11,"set_readonly","","Set read-only by user.",0,[[]]],[11,"set_invisiable","","Set invisiable by user.",0,[[]]],[11,"set_writable","","Set writable by user.",0,[[]]],[11,"set_public_readonly","","Set writable by other users.",0,[[]]],[11,"set_public_invisiable","","Set invisiable by other users.",0,[[]]],[11,"set_public_writable","","Set writable by other users.",0,[[]]],[11,"save","","Save this file.",1,[[]]],[11,"login","","Login with username and password.",3,[[["arc",3]]]],[11,"object","","Create an object in specific class.",3,[[["arc",3]],["object",3]]],[11,"f","","Run a function by name.",3,[[["arc",3]],["box",3]]],[11,"from_option","","Create a server from option",5,[[["config",3]]]],[11,"before_save","","Register a before save hook function.",5,[[["box",3]]]],[11,"after_save","","Register a after save hook function.",5,[[["box",3]]]],[11,"before_destroy","","Register a before destroy hook function.",5,[[["box",3]]]],[11,"after_destroy","","Register a after destroy hook function.",5,[[["box",3]]]],[11,"before_save_file","","Register a hook function triggered before saving a file.",5,[[["box",3]]]],[11,"after_save_file","","Register a hook function triggered after saving a file.",5,[[["box",3]]]],[11,"before_delete_file","","Register a hook function triggered before deleting a file.",5,[[["box",3]]]],[11,"after_delete_file","","Register a hook function triggered after deleting a file.",5,[[["box",3]]]],[11,"define","","Register a function to be invoked by api.",5,[[["box",3]]]],[11,"routes","","Warp\'s filters for routing.",5,[[]]],[11,"run","","Run this `Server` forever on the current thread.",5,[[]]],[0,"user","","User.",null,null],[3,"ClientToken","rhymer::user","JWT token of a verified user.",null,null],[12,"id","","Verified id of this user.",6,null],[12,"name","","Verified name of this user.",6,null],[3,"User","","User instance.",null,null],[3,"LoginQuery","","Login query struct.",null,null],[4,"UserKind","","User kinds.",null,null],[13,"Master","","`Master` represents client request with Master Key.",7,null],[13,"Client","","`Client` is logged-in client.",7,null],[13,"Guest","","`Guest` is non-logged in client.",7,null],[5,"encode_token","","Encode a token struct `t` by key.",null,[[["clienttoken",3]],[["string",3],["rejection",3],["result",4]]]],[5,"decode_token","","Decode token string `s` by key.",null,[[],[["clienttoken",3],["rejection",3],["result",4]]]],[11,"with_context","","Create a user instance with server context.",8,[[["context",3],["arc",3]]]],[11,"signup","","Sign up with username and password, updating this user…",8,[[]]],[11,"login","","Log in with username and password, updating this user…",8,[[]]],[0,"error","rhymer","Error rejections.",null,null],[5,"unauthorized","rhymer::error","Rejection with error `unauthorized`",null,[[],[["result",4],["rejection",3]]]],[5,"bad_request","","Rejection with error `bad_request`",null,[[],[["result",4],["rejection",3]]]],[5,"internal_server_error","","Rejection with error `internal_server_error`",null,[[],[["result",4],["rejection",3]]]],[5,"not_found","","Rejection with error `not_found`",null,[[],[["result",4],["rejection",3]]]],[5,"conflict","","Rejection with error `conflict`",null,[[],[["result",4],["rejection",3]]]],[11,"from","rhymer","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","rhymer::user","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"fmt","rhymer","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",9,[[],["document",3]]],[11,"into_iter","","",9,[[]]],[11,"extend","","",9,[[]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"default","","",9,[[],["document",3]]],[11,"from_iter","","",9,[[],["document",3]]],[11,"try_from","","",9,[[["string",3],["value",4],["map",3]],[["error",4],["result",4],["document",3]]]],[11,"deserialize","","Deserialize this value given this `Deserializer`.",9,[[],[["result",4],["document",3]]]],[11,"from","","",9,[[["bson",4],["string",3],["linkedhashmap",3],["randomstate",3]],["document",3]]],[11,"eq","","",9,[[["document",3]]]],[11,"ne","","",9,[[["document",3]]]],[11,"serialize","","",9,[[],["result",4]]],[11,"from","","",10,[[["infallible",4]],["rejection",3]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"into","","",0,[[],["document",3]]],[11,"clone","","",0,[[],["acl",3]]],[11,"clone","","",4,[[],["request",3]]],[11,"clone","","",3,[[],["context",3]]],[11,"clone","","",2,[[],["config",3]]],[11,"clone","","",5,[[],["server",3]]],[11,"clone","rhymer::user","",6,[[],["clienttoken",3]]],[11,"clone","","",7,[[],["userkind",4]]],[11,"clone","","",8,[[],["user",3]]],[11,"default","rhymer","",0,[[],["acl",3]]],[11,"default","","",2,[[],["config",3]]],[11,"default","","",5,[[],["server",3]]],[11,"default","rhymer::user","",6,[[],["clienttoken",3]]],[11,"fmt","rhymer","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","rhymer::user","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"new","rhymer","Creates a new empty Document.",9,[[],["document",3]]],[11,"iter","","Gets an iterator over the entries of the map.",9,[[],["documentiterator",3]]],[11,"clear","","Clears the document, removing all values.",9,[[]]],[11,"get","","Returns a reference to the Bson corresponding to the key.",9,[[],[["option",4],["bson",4]]]],[11,"get_mut","","Gets a mutable reference to the Bson corresponding to the…",9,[[],[["option",4],["bson",4]]]],[11,"get_f64","","Get a floating point value for this key if it exists and…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_f64_mut","","Get a mutable reference to a floating point value for this…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_str","","Get a string slice this key if it exists and has the…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_str_mut","","Get a mutable string slice this key if it exists and has…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_array","","Get a reference to an array for this key if it exists and…",9,[[],[["vec",3],["result",4],["valueaccesserror",4]]]],[11,"get_array_mut","","Get a mutable reference to an array for this key if it…",9,[[],[["valueaccesserror",4],["result",4],["vec",3]]]],[11,"get_document","","Get a reference to a document for this key if it exists…",9,[[],[["result",4],["document",3],["valueaccesserror",4]]]],[11,"get_document_mut","","Get a mutable reference to a document for this key if it…",9,[[],[["document",3],["result",4],["valueaccesserror",4]]]],[11,"get_bool","","Get a bool value for this key if it exists and has the…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_bool_mut","","Get a mutable reference to a bool value for this key if it…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"is_null","","Returns wether this key has a null value",9,[[]]],[11,"get_i32","","Get an i32 value for this key if it exists and has the…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_i32_mut","","Get a mutable reference to an i32 value for this key if it…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_i64","","Get an i64 value for this key if it exists and has the…",9,[[],[["valueaccesserror",4],["result",4]]]],[11,"get_i64_mut","","Get a mutable reference to an i64 value for this key if it…",9,[[],[["result",4],["valueaccesserror",4]]]],[11,"get_timestamp","","Get a time stamp value for this key if it exists and has…",9,[[],[["result",4],["timestamp",3],["valueaccesserror",4]]]],[11,"get_timestamp_mut","","Get a mutable reference to a time stamp value for this key…",9,[[],[["result",4],["timestamp",3],["valueaccesserror",4]]]],[11,"get_binary_generic","","Get a reference to a generic binary value for this key if…",9,[[],[["result",4],["valueaccesserror",4],["vec",3]]]],[11,"get_binary_generic_mut","","Get a mutable reference generic binary value for this key…",9,[[],[["valueaccesserror",4],["vec",3],["result",4]]]],[11,"get_object_id","","Get a reference to an object id value for this key if it…",9,[[],[["valueaccesserror",4],["result",4],["objectid",3]]]],[11,"get_object_id_mut","","Get a mutable reference to an object id value for this key…",9,[[],[["objectid",3],["result",4],["valueaccesserror",4]]]],[11,"get_datetime","","Get a reference to a UTC datetime value for this key if it…",9,[[],[["datetime",3],["valueaccesserror",4],["result",4]]]],[11,"get_datetime_mut","","Get a mutable reference to a UTC datetime value for this…",9,[[],[["result",4],["datetime",3],["valueaccesserror",4]]]],[11,"contains_key","","Returns true if the map contains a value for the specified…",9,[[]]],[11,"keys","","Gets a collection of all keys in the document.",9,[[],["keys",3]]],[11,"values","","Gets a collection of all values in the document.",9,[[],["values",3]]],[11,"len","","Returns the number of elements in the document.",9,[[]]],[11,"is_empty","","Returns true if the document contains no elements",9,[[]]],[11,"insert","","Sets the value of the entry with the OccupiedEntry\'s key,…",9,[[],[["bson",4],["option",4]]]],[11,"remove","","Takes the value of the entry out of the document, and…",9,[[],[["bson",4],["option",4]]]],[11,"entry","","",9,[[["string",3]],["entry",3]]],[11,"to_writer","","Attempts to serialize the `Document` into a byte stream.",9,[[],[["result",4],["error",4]]]],[11,"from_reader","","Attempts to deserialize a `Document` from a byte stream.",9,[[],[["result",4],["document",3],["error",4]]]],[11,"find","","Searches this `Rejection` for a specific cause.",10,[[],["option",4]]],[11,"is_not_found","","Returns true if this Rejection was made via…",10,[[]]]],"p":[[3,"Acl"],[3,"File"],[3,"Config"],[3,"Context"],[3,"Request"],[3,"Server"],[3,"ClientToken"],[4,"UserKind"],[3,"User"],[3,"Document"],[3,"Rejection"],[3,"LoginQuery"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);